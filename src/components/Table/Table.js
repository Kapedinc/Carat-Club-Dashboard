/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/
import React from 'react';
import { styled } from '@mui/material/styles';
import Row from 'src/components/Row/Row';
import { TableProps } from 'src/types';
const Table1 = styled('div')({
    borderRadius: `24px`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `column`,
    width: '100%',
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `0px`,
    boxSizing: `border-box`,
    height: 'auto',
});
const Row1 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row2 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row3 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row4 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row5 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row6 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row7 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row8 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row9 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
const Row10 = styled(Row)(({ theme }) => ({
    alignSelf: `stretch`,
    margin: `0px`,
}));
function Table(props) {
    return (React.createElement(Table1, { className: props.className },
        React.createElement(Row1, null),
        React.createElement(Row2, null),
        React.createElement(Row3, null),
        React.createElement(Row4, null),
        React.createElement(Row5, null),
        React.createElement(Row6, null),
        React.createElement(Row7, null),
        React.createElement(Row8, null),
        React.createElement(Row9, null),
        React.createElement(Row10, null)));
}
export default Table;
//# sourceMappingURL=Table.js.map