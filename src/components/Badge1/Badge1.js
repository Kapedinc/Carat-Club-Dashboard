/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/
import React from 'react';
import Ellipse1Image from 'src/assets/images/Badge_Ellipse_1.png';
import Ellipse11Image from 'src/assets/images/Badge_Ellipse_1_1.png';
import Ellipse12Image from 'src/assets/images/Badge_Ellipse_1_2.png';
import Ellipse13Image from 'src/assets/images/Badge_Ellipse_1_3.png';
import { styled } from '@mui/material/styles';
import { Badge1Props } from 'src/types';
const ColorGreenSizeDefaul = styled('div')(({ theme }) => ({
    backgroundColor: `rgba(235, 251, 238, 1)`,
    borderRadius: `14px`,
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `flex-start`,
    padding: `3px 8px`,
    boxSizing: `border-box`,
    height: 'auto',
    width: 'fit-content',
}));
const Frame1 = styled('div')({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    margin: `0px`,
});
const Ellipse1 = styled('img')({
    height: `6px`,
    width: `6px`,
    margin: `0px`,
});
const Label = styled('div')(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(55, 178, 77, 1)`,
    fontStyle: `normal`,
    fontFamily: `Inter`,
    fontWeight: `500`,
    fontSize: `13px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    lineHeight: `16px`,
    textTransform: `none`,
    margin: `0px 0px 0px 8px`,
}));
const Frame11 = styled('div')({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    margin: `0px`,
});
const Ellipse11 = styled('img')({
    height: `6px`,
    width: `6px`,
    margin: `0px`,
});
const Label1 = styled('div')(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(73, 80, 87, 1)`,
    fontStyle: `normal`,
    fontFamily: `Inter`,
    fontWeight: `500`,
    fontSize: `13px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    lineHeight: `16px`,
    textTransform: `none`,
    margin: `0px 0px 0px 8px`,
}));
const Frame12 = styled('div')({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    margin: `0px`,
});
const Ellipse12 = styled('img')({
    height: `6px`,
    width: `6px`,
    margin: `0px`,
});
const Label2 = styled('div')(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(247, 103, 7, 1)`,
    fontStyle: `normal`,
    fontFamily: `Inter`,
    fontWeight: `500`,
    fontSize: `13px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    lineHeight: `16px`,
    textTransform: `none`,
    margin: `0px 0px 0px 8px`,
}));
const Frame13 = styled('div')({
    display: `flex`,
    position: `relative`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `flex-start`,
    alignItems: `center`,
    padding: `0px`,
    boxSizing: `border-box`,
    margin: `0px`,
});
const Ellipse13 = styled('img')({
    height: `6px`,
    width: `6px`,
    margin: `0px`,
});
const Label3 = styled('div')(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(240, 62, 62, 1)`,
    fontStyle: `normal`,
    fontFamily: `Inter`,
    fontWeight: `500`,
    fontSize: `13px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    lineHeight: `16px`,
    textTransform: `none`,
    margin: `0px 0px 0px 8px`,
}));
const Label4 = styled('div')(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(55, 178, 77, 1)`,
    fontStyle: `normal`,
    fontFamily: `Inter`,
    fontWeight: `400`,
    fontSize: `11px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    lineHeight: `14px`,
    textTransform: `none`,
    margin: `0px`,
}));
const Label5 = styled('div')(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(247, 103, 7, 1)`,
    fontStyle: `normal`,
    fontFamily: `Inter`,
    fontWeight: `400`,
    fontSize: `11px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    lineHeight: `14px`,
    textTransform: `none`,
    margin: `0px`,
}));
const Label6 = styled('div')(({ theme }) => ({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    fontSynthesis: `none`,
    color: `rgba(240, 62, 62, 1)`,
    fontStyle: `normal`,
    fontFamily: `Inter`,
    fontWeight: `400`,
    fontSize: `11px`,
    letterSpacing: `0px`,
    textDecoration: `none`,
    lineHeight: `14px`,
    textTransform: `none`,
    margin: `0px`,
}));
function Badge1(props) {
    return (React.createElement(ColorGreenSizeDefaul, { className: props.className },
        React.createElement(Frame1, null,
            React.createElement(Ellipse1, { src: Ellipse1Image, loading: "lazy", alt: 'Ellipse 1' }),
            React.createElement(Label, null, `Label`)),
        false && (React.createElement(Frame11, null,
            React.createElement(Ellipse11, { src: Ellipse11Image, loading: "lazy", alt: 'Ellipse 1' }),
            React.createElement(Label1, null, `Label`))),
        false && (React.createElement(Frame12, null,
            React.createElement(Ellipse12, { src: Ellipse12Image, loading: "lazy", alt: 'Ellipse 1' }),
            React.createElement(Label2, null, `Label`))),
        false && (React.createElement(Frame13, null,
            React.createElement(Ellipse13, { src: Ellipse13Image, loading: "lazy", alt: 'Ellipse 1' }),
            React.createElement(Label3, null, `Label`))),
        false && React.createElement(Label4, null, `Label`),
        false && React.createElement(Label5, null, `Label`),
        false && React.createElement(Label6, null, `Label`)));
}
export default Badge1;
//# sourceMappingURL=Badge1.js.map